{"ast":null,"code":"var _jsxFileName = \"/home/soumik/FoodBookingApp/src/Pages/Cart.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { placeOrder, clearHistory } from \"../Redux/Action\";\nlet sum = [];\nlet amt = 0;\n\nfunction Cart({\n  food,\n  placeOrder,\n  foodHistory,\n  clear,\n  delItem\n}) {\n  amt = 0;\n  sum = food.map(ele => parseInt(ele.price));\n\n  if (sum.length > 0) {\n    for (let i = 0; i < sum.length; i++) {\n      amt += Number(sum[i]);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Previous Orders\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Order History\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, foodHistory.map(ele => {\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, `Item name : ${ele.item} Price: Rs ${ele.price}`);\n  })), foodHistory.length ? React.createElement(\"p\", {\n    className: \"lead\",\n    onClick: () => clear(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Clear History\") : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Previous Order : 0\")), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Items in Cart\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, food.map(ele => React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, `Item name : ${ele.item} Price: Rs ${ele.price}`, React.createElement(\"span\", {\n    className: \"ml-3 badge badge-danger\",\n    onClick: () => alert(\"sure want to delete ?\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"remove\")))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"CheckOut\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Total Price is: Rs \", amt), React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: placeOrder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Order Now\"));\n}\n\nconst mapDispatchToProps = dispatch => ({\n  placeOrder: () => dispatch(placeOrder()),\n  clear: () => dispatch(clearHistory()) // delItem: item => dispatch(delItem(item))\n\n});\n\nconst mapStateToProps = state => ({\n  food: state.getFood.cart,\n  foodHistory: state.getFood.orderHistory\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/home/soumik/FoodBookingApp/src/Pages/Cart.jsx"],"names":["React","connect","placeOrder","clearHistory","sum","amt","Cart","food","foodHistory","clear","delItem","map","ele","parseInt","price","length","i","Number","item","alert","mapDispatchToProps","dispatch","mapStateToProps","state","getFood","cart","orderHistory"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { placeOrder, clearHistory } from \"../Redux/Action\";\n\nlet sum = [];\nlet amt = 0;\nfunction Cart({ food, placeOrder, foodHistory, clear, delItem }) {\n  amt = 0;\n  sum = food.map(ele => parseInt(ele.price));\n  if (sum.length > 0) {\n    for (let i = 0; i < sum.length; i++) {\n      amt += Number(sum[i]);\n    }\n  }\n\n  return (\n    <div className=\"text-center\">\n      <p className=\"lead\">Previous Orders</p>\n      <div>\n        <p>Order History</p>\n        <ul>\n          {foodHistory.map(ele => {\n            return <li>{`Item name : ${ele.item} Price: Rs ${ele.price}`}</li>;\n          })}\n        </ul>\n        {foodHistory.length ? (\n          <p className=\"lead\" onClick={() => clear()}>\n            Clear History\n          </p>\n        ) : (\n          <span>Previous Order : 0</span>\n        )}\n      </div>\n      <hr />\n      <hr />\n      <h2>Items in Cart</h2>\n      <ul>\n        {food.map(ele => (\n          <p>\n            {`Item name : ${ele.item} Price: Rs ${ele.price}`}\n            <span\n              className=\"ml-3 badge badge-danger\"\n              onClick={() => alert(\"sure want to delete ?\")}\n            >\n              remove\n            </span>\n          </p>\n        ))}\n      </ul>\n\n      <hr />\n      <h2>CheckOut</h2>\n      <p>Total Price is: Rs {amt}</p>\n      <button className=\"btn btn-success\" onClick={placeOrder}>\n        Order Now\n      </button>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  placeOrder: () => dispatch(placeOrder()),\n  clear: () => dispatch(clearHistory())\n  // delItem: item => dispatch(delItem(item))\n});\n\nconst mapStateToProps = state => ({\n  food: state.getFood.cart,\n  foodHistory: state.getFood.orderHistory\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}